import { Component } from '@angular/core';
import { FormBaseInputs } from '../common';
import * as i0 from "@angular/core";
import * as i1 from "@angular/common";
import * as i2 from "../common/form-hints/form-hints.component";
import * as i3 from "@angular/forms";
/**
 * Textarea Component
 *
 * @export
 * @class TextAreaComponent
 * @typedef {TextAreaComponent}
 * @extends {FormBaseInputs}
 */
class TextAreaComponent extends FormBaseInputs {
    static { this.ɵfac = i0.ɵɵngDeclareFactory({ minVersion: "12.0.0", version: "16.0.4", ngImport: i0, type: TextAreaComponent, deps: null, target: i0.ɵɵFactoryTarget.Component }); }
    static { this.ɵcmp = i0.ɵɵngDeclareComponent({ minVersion: "14.0.0", version: "16.0.4", type: TextAreaComponent, selector: "eds-textarea", usesInheritance: true, ngImport: i0, template: "<div class=\"form-textarea-wrapper\">\n\n  <div class=\"form-textarea-group\">\n\n    <textarea class=\"form-textarea-field\"\n              [id]=\"id\"\n              [name]=\"name\"\n              [formControl]=\"control\"\n              [placeholder]=\"placeholder\"\n              [attr.maxlength]=\"maxLength ?? null\"></textarea>\n\n    <label class=\"form-textarea-label\"\n           [for]=\"id\">\n      {{ placeholder }}\n    </label>\n\n  </div>\n\n  <div class=\"form-textarea-support\"\n       *ngIf=\"(control.invalid && !control.pristine) ||  helperText || maxLength \">\n    <eds-form-hints [control]=\"control\"\n                    [helperText]=\"helperText\"\n                    [errorMessage]=\"errorMessage\"\n                    [maxLength]=\"maxLength\"\n                    [currLength]=\"control.value?.length || 0\"></eds-form-hints>\n  </div>\n\n</div>", dependencies: [{ kind: "directive", type: i1.NgIf, selector: "[ngIf]", inputs: ["ngIf", "ngIfThen", "ngIfElse"] }, { kind: "component", type: i2.FormHintsComponent, selector: "eds-form-hints", inputs: ["control", "helperText", "maxLength", "currLength", "errorMessage"] }, { kind: "directive", type: i3.DefaultValueAccessor, selector: "input:not([type=checkbox])[formControlName],textarea[formControlName],input:not([type=checkbox])[formControl],textarea[formControl],input:not([type=checkbox])[ngModel],textarea[ngModel],[ngDefaultControl]" }, { kind: "directive", type: i3.NgControlStatus, selector: "[formControlName],[ngModel],[formControl]" }, { kind: "directive", type: i3.FormControlDirective, selector: "[formControl]", inputs: ["formControl", "disabled", "ngModel"], outputs: ["ngModelChange"], exportAs: ["ngForm"] }] }); }
}
export { TextAreaComponent };
i0.ɵɵngDeclareClassMetadata({ minVersion: "12.0.0", version: "16.0.4", ngImport: i0, type: TextAreaComponent, decorators: [{
            type: Component,
            args: [{ selector: 'eds-textarea', template: "<div class=\"form-textarea-wrapper\">\n\n  <div class=\"form-textarea-group\">\n\n    <textarea class=\"form-textarea-field\"\n              [id]=\"id\"\n              [name]=\"name\"\n              [formControl]=\"control\"\n              [placeholder]=\"placeholder\"\n              [attr.maxlength]=\"maxLength ?? null\"></textarea>\n\n    <label class=\"form-textarea-label\"\n           [for]=\"id\">\n      {{ placeholder }}\n    </label>\n\n  </div>\n\n  <div class=\"form-textarea-support\"\n       *ngIf=\"(control.invalid && !control.pristine) ||  helperText || maxLength \">\n    <eds-form-hints [control]=\"control\"\n                    [helperText]=\"helperText\"\n                    [errorMessage]=\"errorMessage\"\n                    [maxLength]=\"maxLength\"\n                    [currLength]=\"control.value?.length || 0\"></eds-form-hints>\n  </div>\n\n</div>" }]
        }] });
//# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoidGV4dGFyZWEuY29tcG9uZW50LmpzIiwic291cmNlUm9vdCI6IiIsInNvdXJjZXMiOlsiLi4vLi4vLi4vLi4vLi4vY29tcG9uZW50cy9zcmMvbGliL3RleHRhcmVhL3RleHRhcmVhLmNvbXBvbmVudC50cyIsIi4uLy4uLy4uLy4uLy4uL2NvbXBvbmVudHMvc3JjL2xpYi90ZXh0YXJlYS90ZXh0YXJlYS5jb21wb25lbnQuaHRtbCJdLCJuYW1lcyI6W10sIm1hcHBpbmdzIjoiQUFBQSxPQUFPLEVBQUUsU0FBUyxFQUFFLE1BQU0sZUFBZSxDQUFDO0FBQzFDLE9BQU8sRUFBRSxjQUFjLEVBQUUsTUFBTSxXQUFXLENBQUM7Ozs7O0FBRTNDOzs7Ozs7O0dBT0c7QUFDSCxNQUlhLGlCQUFrQixTQUFRLGNBQWM7OEdBQXhDLGlCQUFpQjtrR0FBakIsaUJBQWlCLDJFQ2Y5QixrM0JBMkJNOztTRFpPLGlCQUFpQjsyRkFBakIsaUJBQWlCO2tCQUo3QixTQUFTOytCQUNFLGNBQWMiLCJzb3VyY2VzQ29udGVudCI6WyJpbXBvcnQgeyBDb21wb25lbnQgfSBmcm9tICdAYW5ndWxhci9jb3JlJztcbmltcG9ydCB7IEZvcm1CYXNlSW5wdXRzIH0gZnJvbSAnLi4vY29tbW9uJztcblxuLyoqXG4gKiBUZXh0YXJlYSBDb21wb25lbnRcbiAqXG4gKiBAZXhwb3J0XG4gKiBAY2xhc3MgVGV4dEFyZWFDb21wb25lbnRcbiAqIEB0eXBlZGVmIHtUZXh0QXJlYUNvbXBvbmVudH1cbiAqIEBleHRlbmRzIHtGb3JtQmFzZUlucHV0c31cbiAqL1xuQENvbXBvbmVudCh7XG4gIHNlbGVjdG9yOiAnZWRzLXRleHRhcmVhJyxcbiAgdGVtcGxhdGVVcmw6ICcuL3RleHRhcmVhLmNvbXBvbmVudC5odG1sJyxcbn0pXG5leHBvcnQgY2xhc3MgVGV4dEFyZWFDb21wb25lbnQgZXh0ZW5kcyBGb3JtQmFzZUlucHV0cyB7XG5cbn1cbiIsIjxkaXYgY2xhc3M9XCJmb3JtLXRleHRhcmVhLXdyYXBwZXJcIj5cblxuICA8ZGl2IGNsYXNzPVwiZm9ybS10ZXh0YXJlYS1ncm91cFwiPlxuXG4gICAgPHRleHRhcmVhIGNsYXNzPVwiZm9ybS10ZXh0YXJlYS1maWVsZFwiXG4gICAgICAgICAgICAgIFtpZF09XCJpZFwiXG4gICAgICAgICAgICAgIFtuYW1lXT1cIm5hbWVcIlxuICAgICAgICAgICAgICBbZm9ybUNvbnRyb2xdPVwiY29udHJvbFwiXG4gICAgICAgICAgICAgIFtwbGFjZWhvbGRlcl09XCJwbGFjZWhvbGRlclwiXG4gICAgICAgICAgICAgIFthdHRyLm1heGxlbmd0aF09XCJtYXhMZW5ndGggPz8gbnVsbFwiPjwvdGV4dGFyZWE+XG5cbiAgICA8bGFiZWwgY2xhc3M9XCJmb3JtLXRleHRhcmVhLWxhYmVsXCJcbiAgICAgICAgICAgW2Zvcl09XCJpZFwiPlxuICAgICAge3sgcGxhY2Vob2xkZXIgfX1cbiAgICA8L2xhYmVsPlxuXG4gIDwvZGl2PlxuXG4gIDxkaXYgY2xhc3M9XCJmb3JtLXRleHRhcmVhLXN1cHBvcnRcIlxuICAgICAgICpuZ0lmPVwiKGNvbnRyb2wuaW52YWxpZCAmJiAhY29udHJvbC5wcmlzdGluZSkgfHwgIGhlbHBlclRleHQgfHwgbWF4TGVuZ3RoIFwiPlxuICAgIDxlZHMtZm9ybS1oaW50cyBbY29udHJvbF09XCJjb250cm9sXCJcbiAgICAgICAgICAgICAgICAgICAgW2hlbHBlclRleHRdPVwiaGVscGVyVGV4dFwiXG4gICAgICAgICAgICAgICAgICAgIFtlcnJvck1lc3NhZ2VdPVwiZXJyb3JNZXNzYWdlXCJcbiAgICAgICAgICAgICAgICAgICAgW21heExlbmd0aF09XCJtYXhMZW5ndGhcIlxuICAgICAgICAgICAgICAgICAgICBbY3Vyckxlbmd0aF09XCJjb250cm9sLnZhbHVlPy5sZW5ndGggfHwgMFwiPjwvZWRzLWZvcm0taGludHM+XG4gIDwvZGl2PlxuXG48L2Rpdj4iXX0=